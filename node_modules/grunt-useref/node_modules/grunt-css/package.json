{
  "name": "grunt-css",
  "description": "Grunt plugin for linting and minifying CSS",
  "version": "0.5.3",
  "homepage": "https://github.com/jzaefferer/grunt-css",
  "author": {
    "name": "Jörn Zaefferer",
    "email": "joern.zaefferer@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jzaefferer/grunt-css.git"
  },
  "bugs": {
    "url": "https://github.com/jzaefferer/grunt-css/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jzaefferer/grunt-css/blob/master/LICENSE-MIT"
    }
  ],
  "main": "tasks/grunt-css",
  "engines": {
    "node": ">=0.6.0"
  },
  "dependencies": {
    "clean-css": "0.9.1",
    "csslint": "0.9.9",
    "gzip-js": "0.3.1"
  },
  "devDependencies": {
    "grunt": "0.4.x",
    "grunt-contrib-jshint": "0.1.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-css\n\n[Grunt](https://github.com/cowboy/grunt) plugin for linting and minifying CSS\n\n## Getting Started\n\nInstall the module with: `npm install grunt-css --save-dev`\n\nThen load it from your own `Gruntfile.js` file:\n\n```js\ngrunt.loadNpmTasks('grunt-css');\n```\n\n## Documentation\n\nThis plugin provides two tasks: `cssmin` and `csslint`. Both area [multi tasks][types_of_tasks], meaning that grunt will automatically iterate over all `cssmin` and `csslint` targets if a target is not specified.\n\n[types_of_tasks]: https://github.com/cowboy/grunt/blob/master/docs/types_of_tasks.md\n\n### cssmin\n\nThis works similar to the [`uglify` task](https://github.com/gruntjs/grunt-contrib-uglify). Specify a src and dest property for input and output:\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  cssmin: {\n    my_target: {\n      src: 'src/input.css',\n      dest: 'dist/output.min.css'\n    }\n  }\n});\n```\n\nExposes option of clean-css, which you can set per target or for all, as usual:\nkeepSpecialComments\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  cssmin: {\n    options: {\n      keepSpecialComments: 0\n    },\n    my_target: {\n      options: {\n        keepSpecialComments: 1\n      },\n      src: 'src/input.css',\n      dest: 'dist/output.min.css'\n    }\n  }\n});\n```\n\n#### Banner comments\n\nIn this example, running `grunt cssmin:my_target` will prepend a banner created by interpolating the `banner` template string with the config object. Here, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today's date.\n\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  pkg: grunt.file.readJSON('package.json'),\n  cssmin: {\n    options: {\n      banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +\n        '<%= grunt.template.today(\"yyyy-mm-dd\") %> */'\n    },\n    my_target: {\n      files: {\n        src: 'src/input.css',\n        dest: 'dist/output.min.css'\n      }\n    }\n  }\n});\n```\n\n\n### csslint\n\nThis is similar to the built-in lint task, though the configuration is different. Here's an example:\n\n```js\ncsslint: {\n  base_theme: {\n    src: \"themes/base/*.css\",\n    rules: {\n      \"import\": false,\n      \"overqualified-elements\": 2\n    }\n  }\n}\n```\n\n`src` specifies the files to lint, `rules` the rules to apply. A value of `false` ignores the rule, a value of `2` will set it to become an error. Otherwise all rules are considered warnings.\n\nFor the current csslint version, these rules are available:\n\n  important\n  adjoining-classes\n  known-properties\n  box-sizing\n  box-model\n  outline-none\n  duplicate-background-images\n  compatible-vendor-prefixes\n  display-property-grouping\n  qualified-headings\n  fallback-colors\n  duplicate-properties\n  empty-rules\n  errors\n  shorthand\n  ids\n  gradients\n  font-sizes\n  font-faces\n  floats\n  underscore-property-hack\n  overqualified-elements\n  import\n  regex-selectors\n  rules-count\n  star-property-hack\n  text-indent\n  unique-headings\n  universal-selector\n  unqualified-attributes\n  vendor-prefix\n  zero-units\n\nFor an explanation of those rules, [check the csslint wiki](https://github.com/stubbornella/csslint/wiki/Rules).\n\n*Side note: To update this list, run this:*\n\n```bash\nnode -e \"require('csslint').CSSLint.getRules().forEach(function(x) { console.log(x.id) })\"\n```\n\n## Contributing\n\nPlease use the issue tracker and pull requests.\n\n## License\nCopyright (c) 2012 Jörn Zaefferer\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-css@0.5.3",
  "dist": {
    "shasum": "e6c5034128534c2d9b53b000db8cbaed6564f564",
    "tarball": "http://registry.npmjs.org/grunt-css/-/grunt-css-0.5.3.tgz"
  },
  "_npmVersion": "1.2.0",
  "_npmUser": {
    "name": "jzaefferer",
    "email": "joern.zaefferer@gmail.com"
  },
  "maintainers": [
    {
      "name": "jzaefferer",
      "email": "joern.zaefferer@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "e6c5034128534c2d9b53b000db8cbaed6564f564",
  "_resolved": "https://registry.npmjs.org/grunt-css/-/grunt-css-0.5.3.tgz",
  "_from": "grunt-css@0.5.3"
}
